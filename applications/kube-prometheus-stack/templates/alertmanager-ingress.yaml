apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-prometheus-stack-alertmanager
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    release: kube-prometheus-stack
    self-monitor: "true"
  annotations:
    meta.helm.sh/release-name: kube-prometheus-stack
    meta.helm.sh/release-namespace: monitoring
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /alerts/$2
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/tls-acme: "true"
    ###########
    # https://kubernetes.github.io/ingress-nginx/examples/auth/basic/
    # https://prometheus.io/docs/guides/basic-auth/
    # It's important the file generated is named auth (actually - that the secret has a key data.auth),
    # otherwise the ingress-controller returns a 503.
    # htpasswd -c auth admin
    # kubectl create secret generic basic-auth --from-file=auth
    ###########
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required - admin
spec:
  rules:
  - http:
      paths:
        - path: /alerts(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: kube-prometheus-stack-alertmanager
              port:
                number: 9093
    host: {{ .Values.hosts }}
  # tls:
  # - secretName: alertmanager-general-tls
  #   hosts:
  #   - {{ .Values.hosts }}